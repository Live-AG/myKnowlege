

// Обрабатывает процесс согласования и проверят на соответствие имен шаблона документа и имени предмета.
// В случае если имя предмета отличается от имени шаблона переопределяется тип предмена.
//
Процедура ГПС_СопоставитьТипыПредметовПоШаблону(ПроцессОбъект, ИмяОсновногоПредмета) Экспорт

	// Необходимо провести рефакторинг кода
	// считаем что предмет основной 1 
	
	//Изменение роли и имени предмета в соответствии с видом документа.
	
	//ТаблицаПредметов = Мультипредметность.ПолучитьПредметыПроцесса(ПроцессСсылка, Истина, Истина);
	
	ШаблонОсновногоПредмета = Справочники.ШаблоныВнутреннихДокументов.НайтиПоНаименованию(ИмяОсновногоПредмета);
	ИмяОсновногоПредмета	= Справочники.ИменаПредметов.НайтиПоНаименованию(ИмяОсновногоПредмета);
	ИмяПредметаДоговор 		= Справочники.ИменаПредметов.НайтиПоНаименованию("Договор с контрагентом");
	ОтноситсяКДоговору 		= Справочники.ТипыСвязей.НайтиПоНаименованию("Относится к договору");
	
	ДобавитьОсновнойПредмет = Истина;
	ДобавитьВспомогательныйПредмет = Истина;
	
	ПредметОснование = Неопределено;
	
	МассивФайлов	 = Новый Массив;
	
	Для Каждого СтрокаТаблицыПредметов Из ПроцессОбъект.Предметы Цикл
		
		Если ТипЗнч(СтрокаТаблицыПредметов.Предмет) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
			
			ИмяПредмета				= СтрокаТаблицыПредметов.ИмяПредмета.Наименование;
			ИмяПредметаПоШаблону	= СтрокаТаблицыПредметов.Предмет.Шаблон.Наименование;
			
			Если СтрокаТаблицыПредметов.РольПредмета = Перечисления.РолиПредметов.Основной Тогда
				
				Если ИмяПредмета <> ИмяПредметаПоШаблону Тогда //Процесс на основании Договора с контрагентом
					
					СоответствующееИмяПредмета = Справочники.ИменаПредметов.НайтиПоНаименованию(ИмяПредметаПоШаблону);
					
					Если ЗначениеЗаполнено(СоответствующееИмяПредмета) Тогда
						
						СтрокаТаблицыПредметов.ИмяПредмета	= СоответствующееИмяПредмета;
						СтрокаТаблицыПредметов.РольПредмета	= Перечисления.РолиПредметов.Вспомогательный;
						
						ДобавитьВспомогательныйПредмет = Ложь;
						
						ПредметОснование = СтрокаТаблицыПредметов.Предмет;
						
					КонецЕсли;
					
				Иначе
					
					ДобавитьОсновнойПредмет = Ложь;	
					
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(СтрокаТаблицыПредметов.Предмет) = Тип("СправочникСсылка.Файлы") Тогда	
				
			МассивФайлов.Добавить(СтрокаТаблицыПредметов.Предмет);						
			
		КонецЕсли;	
			
	КонецЦикла;
	
	Если ДобавитьОсновнойПредмет И ЗначениеЗаполнено(ПредметОснование) Тогда
		
		СтруктураЗаполнения = Новый Структура;
		СтруктураЗаполнения.Вставить("Основание", 		ПредметОснование);
		СтруктураЗаполнения.Вставить("ШаблонДокумента",	ШаблонОсновногоПредмета);
		
		НовыйВнутреннийДокумент = Справочники.ВнутренниеДокументы.СоздатьЭлемент();
		НовыйВнутреннийДокумент.Заполнить(СтруктураЗаполнения);
		
		// Дозаполнить документ
		// *********
		// ******
		// ***
		
		НовыйВнутреннийДокумент.Записать();
		
		СвязиДокументов.СоздатьСвязь(НовыйВнутреннийДокумент.Ссылка, ПредметОснование, ОтноситсяКДоговору, ПроцессОбъект.Автор, ТекущаяДата());
		
		//СтрокаТаблицыПредметов 				= ПроцессОбъект.Предметы.Добавить();
		//СтрокаТаблицыПредметов.ИмяПредмета	= ИмяОсновногоПредмета;
		//СтрокаТаблицыПредметов.РольПредмета	= Перечисления.РолиПредметов.Основной;
		//СтрокаТаблицыПредметов.Предмет		= НовыйВнутреннийДокумент.Ссылка;
		
		ДобавитьПредмет(ПроцессОбъект, НовыйВнутреннийДокумент.Ссылка);
		
	КонецЕсли;
	
	
	//Если ДобавитьВспомогательныйПредмет И ЗначениеЗаполнено(ПредметОснование) Тогда
	//	
	//	ДокументДоговор = СвязиДокументов.ПолучитьСвязанныйДокумент(ПредметОснование, ОтноситсяКДоговору);
	//	
	//	Если ЗначениеЗаполнено(ДокументДоговор) Тогда
	//		СтрокаТаблицыПредметов 				= ПроцессОбъект.Предметы.Добавить();
	//		СтрокаТаблицыПредметов.ИмяПредмета	= ИмяПредметаДоговор;
	//		СтрокаТаблицыПредметов.РольПредмета	= Перечисления.РолиПредметов.Вспомогательный;
	//		СтрокаТаблицыПредметов.Предмет		= ДокументДоговор;
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
	//ТаблицаПредметовЗадач = ПроцессОбъект.ПредметыЗадач.Выгрузить(, "ИмяПредмета");
	//ТаблицаПредметовЗадач.Свернуть("ИмяПредмета");
	//
	//Если ТаблицаПредметовЗадач.Количество() = 1 Тогда
	//	
	//	Если ТаблицаПредметовЗадач[0].ИмяПредмета = ИмяПредметаДоговор Тогда
	//		ЗаполняемоеИмя = ИмяОсновногоПредмета;
	//	Иначе
	//		ЗаполняемоеИмя = ИмяПредметаДоговор;
	//	КонецЕсли;
	//	
	//	СтрокиТаблицыПредметовЗадач = ПроцессОбъект.ПредметыЗадач.НайтиСтроки(Новый Структура("ИмяПредмета", ТаблицаПредметовЗадач[0].ИмяПредмета));
	//	Для Каждого СтрокаПредметовЗадач Из СтрокиТаблицыПредметовЗадач Цикл
	//		
	//		НоваяСтрокаПредметаЗадач = ПроцессОбъект.ПредметыЗадач.Добавить();
	//		ЗаполнитьЗначенияСвойств(НоваяСтрокаПредметаЗадач, СтрокаПредметовЗадач); 
	//		
	//		НоваяСтрокаПредметаЗадач.ИмяПредмета = ЗаполняемоеИмя;
	//		
	//	КонецЦикла;
	//	
	//КонецЕсли;
	
	
	//Мультипредметность.ЗаписатьПредметБизнесПроцесса(ПроцессСсылка, ИмяПредмета, Предмет);
	
КонецПроцедуры
